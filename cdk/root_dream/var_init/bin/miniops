#!/bin/sh
# miniops - Based-on-Commando - 23rd September 2016

# miniops declarations:
lock="/tmp/getepg.lock"

# miniops functions:
fmsg() {
	wget http://localhost/control/message?popup=`echo $1|sed 's/\\\n/%0A/g;s/ /%20/g'` >/dev/null 2>&1
}

bgpic() {
	[ $1 = "true" ] && controldc videoPowerDown 1
	showframe /root/platform/kernel/logo
	[ $1 = "true" ] && controldc videoPowerDown 0
}

popups() {
	bgpic "true" &
	sleep 7
	i=0
	while [ -e $lock ]; do
		i=$(($i + 10))
		fmsg "GetEPG loading, be patient... $i seconds"
		sleep 10
	done
}

# miniops requests:
case "$1" in

# Softcam(s) start
start)
	if [ -e /var/etc/.oscam ]; then
		rdate -s time.mit.edu
		sleep 1
		oscam &
		{ sleep 5; pzapit -rz; } &
	fi

	if [ -e /var/etc/.mgcamd ]; then
		epg-pause >/dev/null 2>&1
		{ sleep 5; mgcamd; } &
	fi

	if [ -e /var/etc/.evocamd ]; then
		evocamd &
	fi

	if [ -e /var/etc/.newcamd ]; then
		newcamd &
	fi

	if [ -e /var/etc/.cccam ]; then
		epg-restart >/dev/null 2>&1
		{ sleep 5; CCcam; } &
	fi
	exit 0
;;

# Softcam(s) stop
stop)
	if [ -e /var/etc/.oscam ]; then
		touch /tmp/oscam.kill
		killall -9 oscam
	fi
	
	if [ -e /var/etc/.mgcamd ]; then
		killall -9 mgcamd
		killall -9 epg-pause
	fi

	if [ -e /var/etc/.evocamd ]; then
		kill $( pidof evocamd )
		killall -9 evocamd
	fi

	if [ -e /var/etc/.newcamd ]; then
		kill $( cat /tmp/newcamd.pid )
		killall -9 newcamd
	fi

	if [ -e /var/etc/.cccam ]; then
		killall -9 CCcam
		killall -9 epg-restart
	fi
	exit 0
;;

# Audio/Video auto re-sync
avsync)
	pzapit -rz
	[ -e /var/etc/.logging ] && echo "sync AV ($2):" `date` >>/tmp/avsync.log
	exit 0
;;

# Show background logo [radio|scan]
showlogo)
	[ ! -e $etc/.no-$2-bg ] && bgpic "false" &
;;

# GetEPG prepare (background test function ONLY!)
getepg)
	touch $lock
	pzapit -ra -zi 7d400021038
	popups &
	sleep 60
	pzapit -n "Sky News"
	rm $lock
	exit 0
;;

# AutoBouquets prepare (background test function ONLY!)
autobouquets)
	bgpic "true" &
	fmsg "Starting 28.2E AutoBouquets, hang on..."
	pzapit -ra -zi 7d400021038
	sleep 10
	pzapit -n "Sky News"
	exit 0
;;

esac

exit 0
